steps:

# Install dependencies
- name: python
  entrypoint: pip
  args: ["install", "-r", "requirements.txt", "--user"]

# Run unit tests
- name: python
  entrypoint: python
  args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"] 

# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/hello-gcp:$COMMIT_SHA', '.']
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/hello-gcp:$COMMIT_SHA']
# Deploy container image to Cloud Run
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: gcloud
#   args: ['run', 'deploy', 'SERVICE_NAME', '--image', 'gcr.io/$PROJECT_ID/IMAGE', '--region', 'SERVICE_REGION']


# Step to create or update a Cloud Scheduler job
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Variables
      #SCHEDULER_JOB_NAME="hello-gcp-scheduler-job"
      TARGET_URL="https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/the-training/jobs/deploy-run-job-dev:run"
      SERVICE_ACCOUNT="diego-sa@the-training.iam.gserviceaccount.com"
      SCHEDULE="* * * * *"  # Every minute
      TIMEZONE="UTC"
      HTTP_METHOD="POST"
      
      # Check if the job exists
      if gcloud scheduler jobs describe "hello-gcp-scheduler-job" --quiet; then
        echo "Updating existing scheduler job..."
        gcloud scheduler jobs update http \
          "hello-gcp-scheduler-job" \
          --schedule "$SCHEDULE" \
          --time-zone "$TIMEZONE" \
          --uri "$TARGET_URL" \
          --http-method "$HTTP_METHOD" \
          --oauth-service-account-email "$SERVICE_ACCOUNT"
      else
        echo "Creating new scheduler job..."
        gcloud scheduler jobs create http \
          "hello-gcp-scheduler-job" \
          --schedule "$SCHEDULE" \
          --time-zone "$TIMEZONE" \
          --uri "$TARGET_URL" \
          --http-method "$HTTP_METHOD" \
          --oauth-service-account-email "$SERVICE_ACCOUNT"
      fi


timeout: '600s'

images:
- gcr.io/$PROJECT_ID/hello-gcp:$COMMIT_SHA

options:
  logging: CLOUD_LOGGING_ONLY
